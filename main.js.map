{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/component/addquestion/addquestion.component.css","webpack:///./src/app/component/addquestion/addquestion.component.html","webpack:///./src/app/component/addquestion/addquestion.component.ts","webpack:///./src/app/component/navbar/navbar.component.css","webpack:///./src/app/component/navbar/navbar.component.html","webpack:///./src/app/component/navbar/navbar.component.ts","webpack:///./src/app/component/question/question.component.css","webpack:///./src/app/component/question/question.component.html","webpack:///./src/app/component/question/question.component.ts","webpack:///./src/app/component/questionlist/questionlist.component.css","webpack:///./src/app/component/questionlist/questionlist.component.html","webpack:///./src/app/component/questionlist/questionlist.component.ts","webpack:///./src/app/service/data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<br><br>\\n<div class=\\\"container\\\">\\n    <app-questionlist></app-questionlist>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'FAQapp';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './component/navbar/navbar.component';\nimport { QuestionlistComponent } from './component/questionlist/questionlist.component';\nimport { DataService } from './service/data.service';\nimport { QuestionComponent } from './component/question/question.component';\nimport { AddquestionComponent } from './component/addquestion/addquestion.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    QuestionlistComponent,\n    QuestionComponent,\n    AddquestionComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">Add New FAQ</div>\\n    <div class=\\\"card-body\\\">\\n      <form (submit)=\\\"addQuestion()\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"text\\\">Question text</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"text\\\" name=\\\"text\\\"> \\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"answer\\\">Question Answer</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"answer\\\" name=\\\"answer\\\"> \\n        </div>\\n        <input type=\\\"submit\\\" value=\\\"Submit\\\" class=\\\"btn btn-primary\\\">\\n      </form>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { Question } from '../../models/Question'\n\n@Component({\n  selector: 'app-addquestion',\n  templateUrl: './addquestion.component.html',\n  styleUrls: ['./addquestion.component.css']\n})\nexport class AddquestionComponent implements OnInit {\n  @Output() questionAdded = new EventEmitter<Question>();\n  text:string;\n  answer:string;\n  constructor() {\n   }\n\n  ngOnInit() {\n  }\n\n  addQuestion(){\n      this.questionAdded.emit({text:this.text,answer:this.answer,hide:true});\n      this.text ='';\n      this.answer='';\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark \\\">\\n  <div class=\\\"container\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">FAQapp</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarsExampleDefault\\\" aria-controls=\\\"navbarsExampleDefault\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsExampleDefault\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"questions\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          {{ question.text }} <a href=\\\"#\\\" class=\\\"btn btn-link\\\" (click) = \\\"question.hide = !question.hide\\\" >Show</a> | <a href=\\\"#\\\" class=\\\"btn btn-link\\\" (click) = \\\"removeQuestion(question)\\\" >Remove</a>\\n        </div>\\n        <div class=\\\"card-body\\\" [hidden] = \\\"question.hide\\\">\\n          <p class=\\\"card-text\\\">\\n            {{ question.answer }}\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n    <br>\\n  </div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Question } from '../../models/Question';\nimport { DataService } from '../../service/data.service';\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.css']\n})\nexport class QuestionComponent implements OnInit {\n  @Input('question') question:Question;\n  constructor(public dataService:DataService) {\n   }\n\n  ngOnInit() {\n  }\n\n  removeQuestion(question:Question){\n      this.dataService.removeQuestion(question);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<app-addquestion (questionAdded)=\\\"addQuestion($event)\\\"></app-addquestion>\\r\\n<hr>\\r\\n<app-question *ngFor = \\\"let question of questions\\\" [question] = \\\"question\\\"></app-question>\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../../service/data.service';\nimport { Question } from '../../models/Question';\n\n@Component({\n  selector: 'app-questionlist',\n  templateUrl: './questionlist.component.html',\n  styleUrls: ['./questionlist.component.css']\n})\nexport class QuestionlistComponent implements OnInit {\n  questions:Question[];\n  constructor(public dataService:DataService) {\n    \n   }\n\n  ngOnInit() {\n    this.questions = this.dataService.getQuestions();\n  }\n\n  addQuestion(question:Question){\n    this.dataService.addQuestion(question);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Question } from '../models/Question';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  questions:Question[];\n  constructor() {\n    // this.questions = [\n    //   {\n    //     text: 'What is your Name?',\n    //     answer: 'My name is Kartik',\n    //     hide: true\n    //   },\n    //   {\n    //     text: 'What is your Laptop Brand?',\n    //     answer: 'My Laptop brand is HP',\n    //     hide: true\n    //   },{\n    //     text: 'What is your favourite color?',\n    //     answer: 'My favourite color is black',\n    //     hide: true\n    //   }\n    //       ];\n  }\n\n\n\n  getQuestions(){\n    if(localStorage.getItem('questions') === null){\n      this.questions = [];\n    }\n    else{\n      this.questions = JSON.parse(localStorage.getItem('questions'));\n    } \n    return this.questions;   \n  }\n\n  addQuestion(question:Question){\n    this.questions.unshift(question);\n    let questions;\n    if(localStorage.getItem('questions') === null){\n      questions = [];\n      questions.unshift(question);\n      localStorage.setItem('questions',JSON.stringify(questions));\n    }\n    else{\n      questions = JSON.parse(localStorage.getItem('questions'));\n      questions.unshift(question);\n      localStorage.setItem('questions',JSON.stringify(questions));\n    }  \n  }\n\n\n  removeQuestion(question:Question){\n    for(let i=0;i<this.questions.length;i++){\n      if(question == this.questions[i] ){\n        this.questions.splice(i,1);\n        localStorage.setItem('questions',JSON.stringify(this.questions));\n      }\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}